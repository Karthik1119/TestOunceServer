# Generated by Django 2.2 on 2020-07-26 14:17

import CustomAuth.Manager
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('device_id', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('version_id', models.CharField(blank=True, default=None, max_length=200, null=True)),
            ],
            options={
                'unique_together': {('device_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_email_verified', models.BooleanField(default=False)),
                ('gender', models.BooleanField(choices=[(1, 'Male'), (0, 'Female')], default=None)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('is_staff', models.BooleanField(default=False)),
                ('passcode', models.CharField(default=-1, max_length=100)),
                ('last_fail', models.DateTimeField(default=None, null=True)),
                ('passcode_retries', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', CustomAuth.Manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('key', models.CharField(db_index=True, max_length=40, primary_key=True, serialize=False, unique=True, verbose_name='Key')),
                ('notification_id', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('expires_on', models.DateTimeField(blank=True, default=datetime.datetime(2020, 9, 24, 14, 17, 13, 373533, tzinfo=utc), null=True)),
                ('permissions', models.CharField(default='{}', max_length=800)),
                ('device', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='CustomAuth.Device')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_tokens', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'abstract': False,
            },
        ),
    ]
